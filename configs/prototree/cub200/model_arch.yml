top_arch: # Optional
  module: cabrnet.archs.prototree.model
  name: ProtoTree # Take "extractor" and "classifier", implement the generic class ProtoClassifier

extractor: # How to build the feature extractor
  backbone:
    arch: resnet50
    layer: layer4
    weights: examples/pretrained_conv_extractors/resnet50_inat.pth
  add_on:
    init_mode: XAVIER
    conv1:
      type: Conv2d # nn.Module name
      params:
        out_channels: 256
        kernel_size: 1
        bias: False
    sigmoid1:
      type: Sigmoid

similarity:
  name: LegacyProtoTreeSimilarity

classifier: # How to compute the decision from the features
  module: cabrnet.archs.prototree.decision
  name: ProtoTreeClassifier
  params:
    num_features: 256 # Can be set automatically
    num_classes: 200
    depth: 9
    leaves_init_mode: ZEROS
    proto_init_mode: SHIFTED_NORMAL
    log_probabilities: False # False in the default Prototree training setup
