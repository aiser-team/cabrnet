# Prototype for CaBRNet CI

variables:
  CABRNET_VERSION: "0.2"
  TAG: "0.2"

default:
  interruptible: true
  tags: [ pub-nix ]

stages:
  - dependencies # in charge of downloading the correct set of dependencies
  - build # in charge of running the proper setup tool to build the archive
  - formatting # in charge of ensuring the correct style of docstrings and code
  - typing # in charge of typechecking using mypy
  - doc # in charge of building the doc
#  - test # in charge of running unit tests
#  - install # in charge of checking that the soft can be released proper
#  - mirror # in charge of replicating the state of this repo on others

dependencies:
  stage : dependencies
  script:
    - nix --extra-experimental-features "nix-command flakes" develop --command python3 -m pip install -r requirements.txt

build:
  stage : build
  script:
    - nix --extra-experimental-features "nix-command flakes" build

code:
  stage : formatting
  allow_failure: true
  script:
    # only focusing on x86_64 linux systems as of now it is not possible to run
    # checks on multiple systems
    - nix --extra-experimental-features "nix-command flakes" build -L .#checks.x86_64-linux.formattingCode

docstrings:
  stage : formatting
  allow_failure: true
  script:
    - nix --extra-experimental-features "nix-command flakes" build -L .#checks.x86_64-linux.formattingDocstring

typing:
  stage : typing
  allow_failure: true
  script:
    - nix --extra-experimental-features "nix-command flakes" build -L .#checks.x86_64-linux.typing

user_manual:
  stage : doc
  allow_failure: true
  script:
    - nix --extra-experimental-features "nix-command flakes" build -L .#cabrnet-doc
  artifacts:
   paths:
     - docs/manuals/user_manual.pdf
